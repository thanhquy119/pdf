import streamlit as st
import os
import logging
import tempfile
import io

from adobe.pdfservices.operation.auth.service_principal_credentials import ServicePrincipalCredentials
from adobe.pdfservices.operation.exception.exceptions import ServiceApiException, ServiceUsageException, SdkException
from adobe.pdfservices.operation.io.cloud_asset import CloudAsset
from adobe.pdfservices.operation.io.stream_asset import StreamAsset
from adobe.pdfservices.operation.pdf_services import PDFServices
from adobe.pdfservices.operation.pdf_services_media_type import PDFServicesMediaType
from adobe.pdfservices.operation.pdfjobs.jobs.export_pdf_job import ExportPDFJob
from adobe.pdfservices.operation.pdfjobs.params.export_pdf.export_pdf_params import ExportPDFParams
from adobe.pdfservices.operation.pdfjobs.params.export_pdf.export_pdf_target_format import ExportPDFTargetFormat
from adobe.pdfservices.operation.pdfjobs.result.export_pdf_result import ExportPDFResult

# Thi·∫øt l·∫≠p logging
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# Th√¥ng tin API Adobe
CLIENT_ID = "01cf11f8e93e4d2c96f6f970c539cdee"
CLIENT_SECRET = "p8e-5tr_FTuckBRf82Ss2CTVc9pf-oWoX1hk"  # Th√™m client secret c·ªßa b·∫°n v√†o ƒë√¢y

def convert_pdf_to_docx(pdf_bytes):
    try:
        # Thi·∫øt l·∫≠p th√¥ng tin x√°c th·ª±c
        credentials = ServicePrincipalCredentials(
            client_id=CLIENT_ID,
            client_secret=CLIENT_SECRET
        )
        
        # T·∫°o instance PDF Services
        pdf_services = PDFServices(credentials=credentials)
        
        # T·∫°o asset t·ª´ file ngu·ªìn v√† t·∫£i l√™n
        input_asset = pdf_services.upload(input_stream=pdf_bytes, mime_type=PDFServicesMediaType.PDF)
        
        # T·∫°o tham s·ªë cho c√¥ng vi·ªác
        export_pdf_params = ExportPDFParams(target_format=ExportPDFTargetFormat.DOCX)
        
        # T·∫°o instance c√¥ng vi·ªác m·ªõi
        export_pdf_job = ExportPDFJob(input_asset=input_asset, export_pdf_params=export_pdf_params)
        
        # G·ª≠i c√¥ng vi·ªác v√† nh·∫≠n k·∫øt qu·∫£
        location = pdf_services.submit(export_pdf_job)
        pdf_services_response = pdf_services.get_job_result(location, ExportPDFResult)
        
        # L·∫•y n·ªôi dung t·ª´ asset k·∫øt qu·∫£
        result_asset = pdf_services_response.get_result().get_asset()
        stream_asset = pdf_services.get_content(result_asset)
        
        # Tr·∫£ v·ªÅ d·ªØ li·ªáu bytes c·ªßa file DOCX
        return stream_asset.get_input_stream()
        
    except (ServiceApiException, ServiceUsageException, SdkException) as e:
        logger.error(f"L·ªói khi chuy·ªÉn ƒë·ªïi PDF: {str(e)}")
        return None

# Thi·∫øt l·∫≠p giao di·ªán Streamlit
st.set_page_config(page_title="PDF sang Word Converter", page_icon="üìÑ")

st.title("Chuy·ªÉn ƒë·ªïi PDF sang Word")
st.write("·ª®ng d·ª•ng n√†y s·ª≠ d·ª•ng Adobe PDF Services API ƒë·ªÉ chuy·ªÉn ƒë·ªïi t·ªáp PDF sang ƒë·ªãnh d·∫°ng Word (.docx)")

uploaded_file = st.file_uploader("Ch·ªçn file PDF", type=["pdf"])

if uploaded_file is not None:
    st.write("File ƒë√£ t·∫£i l√™n:", uploaded_file.name)
    
    if st.button("Chuy·ªÉn ƒë·ªïi"):
        with st.spinner("ƒêang chuy·ªÉn ƒë·ªïi..."):
            # ƒê·ªçc n·ªôi dung file PDF ƒë√£ t·∫£i l√™n
            pdf_bytes = uploaded_file.getvalue()
            
            # T·∫°o t√™n file output
            output_filename = uploaded_file.name.replace(".pdf", ".docx")
            
            # Chuy·ªÉn ƒë·ªïi PDF sang DOCX
            docx_bytes = convert_pdf_to_docx(pdf_bytes)
            
            if docx_bytes:
                st.success("Chuy·ªÉn ƒë·ªïi th√†nh c√¥ng!")
                
                # T·∫°o n√∫t t·∫£i xu·ªëng file Word
                st.download_button(
                    label="T·∫£i xu·ªëng file Word",
                    data=docx_bytes,
                    file_name=output_filename,
                    mime="application/vnd.openxmlformats-officedocument.wordprocessingml.document"
                )
            else:
                st.error("C√≥ l·ªói x·∫£y ra trong qu√° tr√¨nh chuy·ªÉn ƒë·ªïi. Vui l√≤ng th·ª≠ l·∫°i.")

st.markdown("---")
st.write("ƒê∆∞·ª£c x√¢y d·ª±ng v·ªõi Streamlit v√† Adobe PDF Services API")
